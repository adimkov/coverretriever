<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:converter="clr-namespace:CoverRetriever.Converter" 
	xmlns:toolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended"
	x:Class="CoverRetriever.App">
	<Application.Resources>
		<ResourceDictionary>
			<converter:NullToVisibilityConverter x:Key="notNullToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed"/>
			<converter:NullToVisibilityConverter x:Key="nullToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible"/>
			<converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
			
			<LinearGradientBrush x:Key="ReflectionBrush"
							 StartPoint="0,0"
							 EndPoint="0,1">
				<GradientStop Offset="0"
						  Color="#7F000000" />
				<GradientStop Offset=".5"
						  Color="Transparent" />
			</LinearGradientBrush>
			
			<LinearGradientBrush x:Key="BottomBrush" EndPoint="0.5,1" StartPoint="0.5,0">
				<GradientStop Color="WhiteSmoke" Offset="0"/>
				<GradientStop Color="#FFCBCCCE" Offset="1"/>
				<GradientStop Color="#FFE6E6E8" Offset="0.49"/>
				<GradientStop Color="#FFBABABC" Offset="0.51"/>
			</LinearGradientBrush>
			<LinearGradientBrush x:Key="TopBrush" EndPoint="0.5,1" StartPoint="0.5,0">
				<GradientStop Color="#FFBABABC" Offset="0"/>
				<GradientStop Color="#FFE6E6E8" Offset="1"/>
				<GradientStop Color="#FFCBCCCE" Offset="0.49"/>
				<GradientStop Color="WhiteSmoke" Offset="0.51"/>
			</LinearGradientBrush>
			
			<SolidColorBrush x:Key="Backround" Color="#FFEFEFEF"/>
			
			<SolidColorBrush x:Key="BorderColor" Color="#FF888888"/>
			
			<Thickness x:Key="LayoutRootMargin" Left="4" Right="4" Top="4" Bottom="4"/>
								
			<Style TargetType="{x:Type TextBlock}">
				<Setter Property="FontFamily" Value="Tahoma"/>
				<Setter Property="TextWrapping" Value="Wrap"/>
			</Style>
			
			<Style x:Key="H1TextBlock" TargetType="{x:Type TextBlock}">
				<Setter Property="FontWeight" Value="Bold"/>
				<Setter Property="Foreground" Value="#FF606060"/>
				<Setter Property="FontFamily" Value="Tahoma"/>
			</Style>
			<Style TargetType="{x:Type Button}">
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="1,0,1,1"/>
				<Setter Property="Foreground" Value="#FF4C4C4C"/>
				<Setter Property="FontWeight" Value="Normal"/>
				<Setter Property="FontSize" Value="12"/>
				<Setter Property="MinWidth" Value="75"/>
				<Setter Property="Background">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFF7F7F7" Offset="0"/>
							<GradientStop Color="#FFE5E5E5" Offset="1"/>
							<GradientStop Color="#FFF1F1F1" Offset="0.5"/>
							<GradientStop Color="#FFE6E6E6" Offset="0.51"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="BorderBrush">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FF919191" Offset="0"/>
							<GradientStop Color="#FFBABABA" Offset="1"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Grid.Resources>
									<CornerRadius x:Key="CornerRadius">4</CornerRadius>
									<SolidColorBrush x:Key="PressedBrush" Color="#FF888888"/>
								</Grid.Resources>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
													<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
													<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
												</DoubleAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledBorder">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="MouseOver">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
													<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.2"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
													<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Pressed">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
													<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
												</DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
													<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.4"/>
												</DoubleAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Disabled">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledBorder">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
									<ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Border>
								<Border x:Name="MouseOverBorder" BorderThickness="1" Opacity="0" CornerRadius="{DynamicResource CornerRadius}" Background="{DynamicResource PressedBrush}"/>
								<Border x:Name="PressedBorder" BorderThickness="1" Opacity="0" CornerRadius="{DynamicResource CornerRadius}" Background="{DynamicResource PressedBrush}"/>
								<Border x:Name="DisabledBorder" BorderThickness="1" Opacity="1" CornerRadius="{DynamicResource CornerRadius}" Background="#7EFFFFFF" Visibility="Collapsed"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="MinHeight" Value="22"/>
				<Setter Property="FontFamily" Value="Segoe UI Semibold"/>
			</Style>
			
			<Style x:Key="OverlayRectangleStyle" TargetType="{x:Type Rectangle}">
				<Setter Property="Fill" Value="White"/>
				<Setter Property="Opacity" Value="0.045"/>
			</Style>
			
			<Style TargetType="toolkit:BusyIndicator">
				<Setter Property="IsBusy" Value="False"/>
				<Setter Property="OverlayStyle" Value="{DynamicResource OverlayRectangleStyle}"/>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>