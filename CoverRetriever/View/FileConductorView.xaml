<UserControl x:Class="CoverRetriever.View.FileConductorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:CoverRetriever.Controls"
             xmlns:converter="clr-namespace:CoverRetriever.Converter"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:resources="clr-namespace:CoverRetriever.Resources"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:CoverRetriever.Behaviors"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" MinHeight="190"
             d:DesignWidth="405"
             mc:Ignorable="d" IsEnabled="{Binding SelectedAudio, Converter={StaticResource nullToBoolConverter}}">
    <UserControl.Resources>
        <resources:CoverRetrieverResourcesWrapper x:Key="coverRetrieverResources" />
        <converter:CoverToImageConverter x:Key="coverToImageConverter" />
        <converter:CoverRecipientToBoolConverter x:Key="coverRecipientToBoolConverter" />

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" >
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,4,0" />
        </Style>
        
        <Style TargetType="xctk:SplitButton" BasedOn="{StaticResource {x:Type xctk:SplitButton}}">
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,0,8,-3"/>
        </Style>

        <Style x:Key="TagButton"
               BasedOn="{StaticResource {x:Type Button}}"
               TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,0,0,-3" />
        </Style>

        <Style x:Key="TaggerHighlight" TargetType="Border">
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="{StaticResource ColorAccentHighlightBrush}" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="-3,-3,-3,-6" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="136" />
            <ColumnDefinition Width="55" />
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="30" />
            <RowDefinition Height="35.1066666666667" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <CheckBox x:Name="embedCheckBox"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="{Binding CoverRetrieverResources.FlagEmbedCover,
                                    Source={StaticResource coverRetrieverResources}}"
                  IsChecked="{Binding Path=Recipient,
                                      Mode=TwoWay,
                                      Converter={StaticResource coverRecipientToBoolConverter}}" />
        <StackPanel Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Orientation="Horizontal"
                    Visibility="{Binding ElementName=embedCheckBox,
                                         Path=IsChecked,
                                         Converter={StaticResource boolToVisibilityConverter}}">
            <CheckBox VerticalAlignment="Center"
                      Content="{Binding CoverRetrieverResources.FlagApplyToAll,
                                        Source={StaticResource coverRetrieverResources}}"
                      IsChecked="{Binding Path=ApplyToAllFiles,
                                          Mode=TwoWay}" />
        </StackPanel>
        <TextBlock Grid.Row="1"
                   Grid.Column="1"
                   Style="{DynamicResource ContentTextStyle}"
                   Text="{Binding CoverRetrieverResources.TextTrackName,
                                  Source={StaticResource coverRetrieverResources}}" />
        <TextBox x:Name="textBox"
                 Grid.Row="1"
                 Grid.Column="2"
                 VerticalAlignment="Center"
                 controls:TextValidator.NotifyIfEmpty="True"
                 Text="{Binding Path=TrackName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <i:Interaction.Behaviors>
                <behaviors:SelectAllOnGotFocusBehavior/>
            </i:Interaction.Behaviors>
        </TextBox>
        <TextBlock Grid.Row="2"
                   Grid.Column="1"
                   Style="{DynamicResource ContentTextStyle}"
                   Text="{Binding CoverRetrieverResources.TextArtist,
                                  Source={StaticResource coverRetrieverResources}}" />
        <TextBox Grid.Row="2"
                 Grid.Column="2"
                 VerticalAlignment="Center"
                 controls:TextValidator.NotifyIfEmpty="True"
                 Text="{Binding Path=Artist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <i:Interaction.Behaviors>
                <behaviors:SelectAllOnGotFocusBehavior/>
            </i:Interaction.Behaviors>
        </TextBox>
        <TextBlock Grid.Row="3"
                   Grid.Column="1"
                   Style="{DynamicResource ContentTextStyle}"
                   Text="{Binding CoverRetrieverResources.TextAlbum,
                                  Source={StaticResource coverRetrieverResources}}" />
        <TextBox Grid.Row="3"
                 Grid.Column="2"
                 VerticalAlignment="Center"
                 controls:TextValidator.NotifyIfEmpty="True"
                 Text="{Binding Path=Album, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
            <i:Interaction.Behaviors>
                <behaviors:SelectAllOnGotFocusBehavior/>
            </i:Interaction.Behaviors>
        </TextBox>
        <TextBlock Grid.Row="4"
                   Grid.Column="1"
                   Margin="0"
                   Style="{DynamicResource ContentTextStyle}"
                   Text="{Binding CoverRetrieverResources.TextYear,
                                  Source={StaticResource coverRetrieverResources}}" />
        <TextBox Grid.Row="4"
                 Grid.Column="2"
                 Width="45"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Center"
                 controls:TextValidator.NotifyIfEmpty="True"
                 Text="{Binding Path=Year, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
            <i:Interaction.Behaviors>
                <behaviors:SelectAllOnGotFocusBehavior/>
            </i:Interaction.Behaviors>
        </TextBox>
        <Border Grid.Row="1"
                Grid.RowSpan="4"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                DataContext="{Binding }">
            <Border.Effect>
                <DropShadowEffect BlurRadius="5" ShadowDepth="0" />
            </Border.Effect>
            <Grid Width="128" Height="128">
                <Image Source="/CoverRetriever;component/Assets/Shell_NoCover.png" Visibility="{Binding Path=SelectedAudioCover, Converter={StaticResource nullToVisibilityConverter}}" />
                <Image x:Name="CurrentCoverImage"
                       Margin="0,-1,0,1"
                       controls:ImageAsyncSource.AsyncSource="{Binding Path=SelectedAudioCover,
                                                                       Converter={StaticResource coverToImageConverter}}"
                       Visibility="{Binding Path=SelectedAudioCover,
                                            Converter={StaticResource notNullToVisibilityConverter}}" />
            </Grid>
        </Border>
        <StackPanel Grid.Row="5"
                    Grid.ColumnSpan="2"
                    Margin="0,6,0,0"
                    Orientation="Horizontal"
                    Visibility="{Binding Path=SelectedAudioCover,
                                         Converter={StaticResource notNullToVisibilityConverter}}"
                    d:LayoutOverrides="GridBox">
            <StackPanel Orientation="Horizontal">
                <TextBlock Style="{DynamicResource ContentTextStyle}" Text="{Binding CoverRetrieverResources.TextCoverSixeWidth, Source={StaticResource coverRetrieverResources}}" />
                <TextBlock Margin="2,0,8,0"
                           Style="{DynamicResource ContentTextStyle}"
                           Text="{Binding Path=SelectedAudioCover.CoverSize.Width}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Style="{DynamicResource ContentTextStyle}" Text="{Binding CoverRetrieverResources.TextCoverSixeHeight, Source={StaticResource coverRetrieverResources}}" />
                <TextBlock Margin="2,0,8,0"
                           Style="{DynamicResource ContentTextStyle}"
                           Text="{Binding Path=SelectedAudioCover.CoverSize.Height}" />
            </StackPanel>
        </StackPanel>
        <Border x:Name="getTaggerBorder"
                Grid.Column="2"
                Grid.ColumnSpan="3"
                Grid.Row="5"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Visibility="{Binding IsDirty, Converter={StaticResource invertBoolToVisibilityConverter}}">
            <Grid>
                <Button x:Name="getTagButton"
                                    Command="{Binding GrabTagsCommand}"
                                    Content="{Binding Path=CoverRetrieverResources.TextGetTagsFromLasrFm,
                                                      Source={StaticResource coverRetrieverResources}}"
                                    Style="{StaticResource TagButton}" />
                <Border Opacity="0" Style="{StaticResource TaggerHighlight}">
                    <i:Interaction.Behaviors>
                        <behaviors:HighlightElementBehavior HighlightRequest="{Binding HighlightToGetTags}" />
                    </i:Interaction.Behaviors>
                </Border>
            </Grid>
        </Border>
        <Border x:Name="saveTagBorder" 
                Grid.Column="2"
                Grid.ColumnSpan="3"
                Grid.Row="5"
                Visibility="{Binding IsDirty, Converter={StaticResource boolToVisibilityConverter}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <xctk:SplitButton x:Name="saveButton"
                                  Grid.Column="0"
                                  Command="{Binding SaveSuggestedTagCommand}"
                                  Content="{Binding CoverRetrieverResources.TextSave, Source={StaticResource coverRetrieverResources}}">
                    <xctk:SplitButton.DropDownContent>
                        <Button Margin="1,1" Width="177" Content="{Binding CoverRetrieverResources.FlagApplyToAll, Source={StaticResource coverRetrieverResources}}"/>
                    </xctk:SplitButton.DropDownContent>
                </xctk:SplitButton>
                <Button x:Name="cancelButton"
                        Grid.Column="1"
                        Command="{Binding RejectSuggestedTagCommand}"
                        Content="{Binding CoverRetrieverResources.TextCancel, Source={StaticResource coverRetrieverResources}}"
                        Style="{StaticResource TagButton}" />
            </Grid>
        </Border>
    </Grid>
</UserControl>
