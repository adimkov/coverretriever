<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:behaviors="clr-namespace:CoverRetriever.Behaviors">

    <!--
        ***************************************************************************
        BusyIndicator
        ***************************************************************************
    -->

    <Style TargetType="xctk:BusyIndicator">
        <Setter Property="Background" Value="#FFF0F0F0" />
        <Setter Property="BorderBrush" Value="{StaticResource DarkBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BusyContent" Value="Please wait..." />
        <Setter Property="DisplayAfter" Value="00:00:00.1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="#60000000" />
                    <Setter Property="Opacity" Value="1" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ProgressBarStyle">
            <Setter.Value>
                <Style TargetType="ProgressBar">
                    <Setter Property="Background" Value="{StaticResource ControlBackgroundAltBrush}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Foreground" Value="{StaticResource ColorAccentBrush}" />
                    <Setter Property="Height" Value="10" />
                    <Setter Property="IsIndeterminate" Value="True" />
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="MaxWidth" Value="150" />
                    <Setter Property="Margin" Value="0,12,0,0" />
                    <Setter Property="Template" Value="{StaticResource ProgressBarTemplate}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xctk:BusyIndicator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="busycontent"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="overlay"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="busycontent"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="overlay"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="content"
                                                                       Storyboard.TargetProperty="(Control.IsEnabled)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetName="content"
                                                                       Storyboard.TargetProperty="(Control.IsEnabled)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}" />
                        <ContentControl x:Name="busycontent" IsHitTestVisible="False">
                            <Border MinWidth="160"
                                    MinHeight="60"
                                    Margin="10"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{StaticResource DarkBorder}"
                                    BorderThickness="1"
                                    CornerRadius="4">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="20"
                                                      Opacity="0.4"
                                                      ShadowDepth="20" />
                                </Border.Effect>
                                <Grid Margin="12">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter VerticalAlignment="Center"
                                                      Content="{TemplateBinding BusyContent}"
                                                      ContentTemplate="{TemplateBinding BusyContentTemplate}" />
                                    <ProgressBar Grid.Row="1" Style="{TemplateBinding ProgressBarStyle}" IsTabStop="False"/>
                                </Grid>
                            </Border>
                        </ContentControl>
                        <behaviors:FocusableBusyBehavior AssociatedObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsBusy="{TemplateBinding IsBusy}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        ***************************************************************************
        SplitButton
        ***************************************************************************
    -->

    <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />

    <LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0" />
        <GradientStop Color="#FF8399A9" Offset="0.375" />
        <GradientStop Color="#FF718597" Offset="0.375" />
        <GradientStop Color="#FF617584" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="DefaultButton" TargetType="Button">
        <Setter Property="Padding" Value="18,6" />
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                    <VisualTransition To="Pressed" />
                                    <VisualTransition From="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="PressedElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="NormalElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0.25" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="PressedElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="NormalElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="HighlightElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0.5" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="ContentHost"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="0.75" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="DisabledElement"
                                Background="{StaticResource DisabledBrush}"
                                CornerRadius="2"
                                Opacity="0">
                            <Border BorderBrush="{StaticResource DisabledBorderBrush}"
                                    BorderThickness="0,0,1,1"
                                    CornerRadius="2" />
                        </Border>
                        <Border x:Name="NormalElement"
                                Background="{StaticResource ControlBackgroundNormal}"
                                CornerRadius="2"/>
                        <Border x:Name="MouseOverElement"
                                Background="{StaticResource ControlBackgroundOver}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="PressedElement"
                                Background="{StaticResource ControlBackgroundPressed}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="HighlightElement"
                                BorderBrush="{StaticResource ControlHighlight}"
                                BorderThickness="1,1,0,0"
                                CornerRadius="2" />
                        <ContentPresenter x:Name="ContentHost"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
<!--                            <ContentPresenter.Effect>-->
<!--                                <DropShadowEffect BlurRadius="1"-->
<!--                                                  Direction="-90"-->
<!--                                                  Opacity="0.5"-->
<!--                                                  ShadowDepth="1"-->
<!--                                                  Color="{StaticResource ColorForegroundShadowColor}" />-->
<!--                            </ContentPresenter.Effect>-->
                        </ContentPresenter>
                        <Rectangle x:Name="FocusVisualElement"
                                   Margin="1"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Stroke="{StaticResource FocusVisualBrush}"
                                   StrokeThickness="{StaticResource FocusVisualStrokeThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DropDownSplitButton" TargetType="ToggleButton">
        <Setter Property="Padding" Value="18,6" />
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
        <Setter Property="Margin" Value="0,0,8,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                    <VisualTransition To="Pressed" />
                                    <VisualTransition From="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="PressedElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="NormalElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.25" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="PressedElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="NormalElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="HighlightElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.5" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="ContentHost"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.75" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked" />
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="DisabledElement"
                                Background="{StaticResource DisabledBrush}"
                                CornerRadius="2"
                                Opacity="0">
                            <Border BorderBrush="{StaticResource DisabledBorderBrush}"
                                    BorderThickness="0,0,1,1"
                                    CornerRadius="2" />
                        </Border>
                        <Border x:Name="NormalElement"
                                Background="{StaticResource ControlBackgroundNormal}"
                                CornerRadius="2"
                                />
                        <Border x:Name="MouseOverElement"
                                Background="{StaticResource ControlBackgroundOver}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="PressedElement"
                                Background="{StaticResource ControlBackgroundPressed}"
                                CornerRadius="2"
                                Opacity="0" />
                        <Border x:Name="HighlightElement"
                                BorderBrush="{StaticResource ControlHighlight}"
                                BorderThickness="1,1,0,0"
                                CornerRadius="2" />
                        <ContentPresenter x:Name="ContentHost"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                         </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type xctk:SplitButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Padding" Value="18,6" />
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:SplitButton}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="NormalElement"
                                Background="{StaticResource ControlBackgroundNormal}"
                                CornerRadius="2"
                                Effect="{StaticResource ControlShadowEffect}" Grid.ColumnSpan="3" />
                            <Button x:Name="PART_ActionButton" 
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Content="{TemplateBinding Content}" 
                                Margin="0" 
                                Style="{StaticResource DefaultButton}">
                            </Button>
                            <Rectangle Grid.Column="1" VerticalAlignment="Stretch" Stroke="#606060" StrokeThickness="1" Width="1"/>
                            <ToggleButton x:Name="PART_ToggleButton"
                                      Grid.Column="2"
                                      IsTabStop="False"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                      Margin="0"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      HorizontalContentAlignment="Right"
                                      Padding="3"
                                      BorderBrush="Black"
                                      BorderThickness="1,0,0,0"
                                      Style="{StaticResource DropDownSplitButton}">
                                <Path x:Name="BtnArrow"
                                          Width="8"
                                          Height="4"
                                          Margin="0,0,6,0"
                                          HorizontalAlignment="Right"
                                          Data="M0,0 L1,0 0.5,1Z"
                                          Fill="#606060"
                                          Stretch="Fill" />
                            </ToggleButton>
                        </Grid>
                       
                        <Popup x:Name="PART_Popup" 
                         HorizontalOffset="-1"
                         VerticalOffset="1"
                         AllowsTransparency="True"
                         StaysOpen="False"
                         Placement="Bottom"
                         Focusable="False"
                         IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}">
                            <!-- TODO: Create Popup Styles that can be reused on all popups in the toolkit-->
                            <Border BorderThickness="1" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource ColorPickerDarkBorderBrush}">
                                <ContentPresenter Content="{TemplateBinding DropDownContent}" />
                            </Border>
                            <Popup.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="Padding" Value="16,6" />
                                    <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
                                    <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
                                    <Setter Property="MinWidth" Value="75" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid x:Name="Root">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0:0:0.1" />
                                                                <VisualTransition To="Pressed" />
                                                                <VisualTransition From="Pressed" />
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="PressedElement"
                                                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                                     To="0" />
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="MouseOverElement"
                                                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                                     To="1" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="PressedElement"
                                                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                                     To="1" />
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="MouseOverElement"
                                                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                                     To="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="DisabledElement"
                                                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                                     To="1" />
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="HighlightElement"
                                                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                                     To="0.5" />
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="ContentHost"
                                                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                                     To="0.75" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Focused">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="FocusVisualElement"
                                                                                     Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                                     To="1" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unfocused" />
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="DisabledElement"
                                                            Background="{StaticResource DisabledBrush}"
                                                            CornerRadius="2"
                                                            Opacity="0">
                                                        <Border BorderBrush="{StaticResource DisabledBorderBrush}"
                                                                BorderThickness="0,0,1,1"
                                                                CornerRadius="2" />
                                                    </Border>
                                                    <Border x:Name="MouseOverElement"
                                                            Background="{StaticResource ControlBackgroundOver}"
                                                            CornerRadius="2"
                                                            Opacity="0" />
                                                    <Border x:Name="PressedElement"
                                                            Background="{StaticResource ControlBackgroundPressed}"
                                                            CornerRadius="2"
                                                            Opacity="0" />
                                                    <Border x:Name="HighlightElement"
                                                            BorderBrush="{StaticResource ControlHighlight}"
                                                            BorderThickness="1,1,0,0"
                                                            CornerRadius="2" />
                                                    <ContentPresenter x:Name="ContentHost"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    </ContentPresenter>
                                                    <Rectangle x:Name="FocusVisualElement"
                                                               Margin="1"
                                                               IsHitTestVisible="False"
                                                               Opacity="0"
                                                               RadiusX="1"
                                                               RadiusY="1"
                                                               Stroke="{StaticResource FocusVisualBrush}"
                                                               StrokeThickness="{StaticResource FocusVisualStrokeThickness}" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Popup.Resources>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>